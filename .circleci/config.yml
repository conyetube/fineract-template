# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

commands:
  generate_build_tag:
    steps:
      - run:
          name: Setup BUILD_TAG environment variable
          command: echo 'export BUILD_TAG="build-$(date +%Y-%m-%d)-$(git rev-parse --short HEAD)-${CIRCLE_BUILD_NUM}"' >> "$BASH_ENV"
      - persist_to_workspace:
          root: /home/circleci/project/tag/
          paths:
            - tag.env

  # ----------------------------------------------------------------------------


  load_build_tag:
    description: Load the code change results from the workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Add code change results to bash environment
          command: |
            if [ -f "/tmp/workspace/code-changes.env" ]; then
              cat /home/circleci/project/tags/tag.env >> $BASH_ENV
              echo "Code change results loaded from workspace $BUILD_TAG"
#s Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - generate_build_tag
      - load_build_tag
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
